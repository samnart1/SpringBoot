services:
  postgres:
    image: postgres:latest
    container_name: patient-postgres
    environment:
      POSTGRES_DB: patient_management
      POSTGRES_USER: admin_user
      POSTGRES_PASSWORD: password
    ports:
      - "5431:5431"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      # use the same DB user you actually created
      test: ["CMD-SHELL", "pg_isready -U admin_user -d patient_management"]
      interval: 10s
      timeout: 5s
      retries: 5

  patient-service:
    build:
      context: ./patient-service
    container_name: patient-service
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # inside the Docker network, Postgres listens on 5432
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/patient_management
      SPRING_DATASOURCE_USERNAME: admin_user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    ports:
      - "4000:4000"
    restart: always

  billing-service:
    build: 
      context: ./billing-service
    container_name: billing-service
    ports:
      - "4001:4001"
    restart: always

volumes:
  postgres-data:
